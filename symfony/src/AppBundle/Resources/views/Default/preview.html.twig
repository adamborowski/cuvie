{% extends 'AppBundle::base.html.twig' %}

{% block body %}
    <div class="container a-flex-container a-absolute">
        <div>
            <div class="alert alert-dismissible alert-success a-home-alert pull-right">
                <button type="button" class="close" data-dismiss="alert">×</button>
                {#<h4>{{ 'preview.tip.header'|trans|raw }}</h4>#}
                {{ 'preview.tip'|trans|raw }}
            </div>
            <h1>{{ currency.id }}</h1>

            <div class="">
                <table class="table pull-right" style="width:auto">
                    <tr>
                        <th>{{ 'tab.min'|trans }}</th>
                        <td>{{ attrs.min_value|number_format(4, '.', ',') }}</td>
                        <th>{{ 'tab.max'|trans }}</th>
                        <td>{{ attrs.max_value|number_format(4, '.', ',') }}</td>
                        <th>{{ 'tab.avg'|trans }}</th>
                        <td>{{ attrs.avg_value|number_format(4, '.', ',') }}</td>
                        <th>{{ 'tab.ratio'|trans }}</th>
                        <td>{{ currency.ratio }}</td>
                    </tr>
                </table>
            </div>
            <p class="lead">{{ 'details.of'|trans }} {{ currency.label }}</p>
        </div>
        <div class="splitter-enabled a-flex-container a-flex">
            <div class="a-chart a-flex" id="currency-chart"></div>
            <div class="a-chart-table-container a-flex">
                <table class="table table-striped table-hover a-chart-table">
                    <thead>
                    <tr>
                        <th>
                            {{ 'tab.date'|trans }}
                        </th>
                        <th>
                            {{ 'tab.value'|trans }}
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for entry in currency.entries|reverse %}
                        <tr>
                            <td>
                                {{ entry.date|date('Y-m-d') }}
                            </td>
                            <td>
                                {{ entry.value }}
                            </td>

                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    {% javascripts
    '@AppBundle/Resources/public/dygraph/dygraph-combined.js'
    '@AppBundle/Resources/public/jquery.dateformat.min.js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script type="text/javascript">
        var data ={{ json|raw }};
        var chartData = data.map(function (x) {
            return [new Date(x.date), x.value]
        });


        $(function () {
            var chartElement = $('#currency-chart');
            var tableElement = $('.a-chart-table');
            var tableContainerElement = $('.a-chart-table-container');
            $('.splitter-enabled').split({
                orientation: 'horizontal',
                limit: 140,
                position: '50%',
                onDrag: function () {
                    g.resize();
                }
            });

            var lastHighlighted;
            var g = this.g = new Dygraph(chartElement.get(0), chartData, {
                labels: ['{{'time'|trans }}', '{{ currency.id }}'],
                axes: {
                    y: {
                        axisLabelWidth: 20
                    }
                },
                valueFormatter: function (a, b, c, d, e, f) {
                    if (f == 0)
                        return DateFormat.format.date(a, 'yyyy-MM-dd');
                    return a;
                },
                interactionModel: Dygraph.Interaction.defaultModel,
                labelsDivWidth: 180,
                highlightCircleSize: 4,
                rightGap: 0,
                leftGap: 0,
                showRangeSelector: true,
                rangeSelectorHeight: 30,
                fillGraph: true,
                fillAlpha: 0.8,
                color: '#079ddc',
                highlightCallback: function (a, b, c, index) {
                    if (lastHighlighted)lastHighlighted.removeClass('a-highlighted-row');
                    lastHighlighted = tableElement.find('tr').eq(data.length - index);
                    lastHighlighted.addClass('a-highlighted-row');
                    var rowpos = lastHighlighted.position();
                    var tableHeight = tableContainerElement.height();
                    var currentScrollTop = tableContainerElement.scrollTop();
                    var localTop = rowpos.top + currentScrollTop;
                    var rowHeight = lastHighlighted.height();
                    if (localTop >= currentScrollTop + tableHeight - rowHeight) {
                        tableContainerElement.scrollTop(localTop - tableHeight + rowHeight);
                    }
                    else if (localTop < currentScrollTop) {
                        tableContainerElement.scrollTop(localTop);
                    }

                },
                unhighlightCallback: function () {
                    lastHighlighted.removeClass('a-highlighted-row');
                    lastHighlighted = null;
                }

            });

            tableElement.on("mouseenter", "tr", function (e) {
                var el = $(e.currentTargt);
                var index = data.length - $(this).index() - 1;
                console.log("index:", index);
                g.setSelection(index);
                //TODO zrobić w razie czego pokazanie większego range jesli nie widac by było
            });
            tableElement.find('tbody').on("mouseleave", function () {
                g.clearSelection();
            });

            //init splitter


        });

    </script>
{% endblock %}
